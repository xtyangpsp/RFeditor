Purpose of this program is to an editor for receiver function data.  
Original motivation is EARS, but want to make it as general as reasonably
possible.   

Considered making this a very general trace editor, but decided I should
do that as version 2.   Doing a more specialized implementation first 
will help me understand limitations of something more generic.

This program is not a large project because the hard part was done previously
writing a generic trace editing graphical interface built on the widget used
in dbxcor.

To abstract the functionality and provide an easy way to separate 
potential changes to the graphics used this implementation will center
on a processing object.   Here are key elements:

1.  constructor launches two editing windows, one for R and one for T 
data.  
2.  Need a load data method to display a set of data for editing.  
The data should be passed as a pointer for efficiency and to allow
editing by marking data as dead.

3.  Need an edit method.  The edit method will use the interactive display to 
mark traces to be killed.   It should also have an internal method to 
kill companions T or R trace to any kill.   

4.  After edit is called should have the original ensemble with the only distinction being some traces are marked dead.  


Driver is relatively simple with all the work in a processing object:

1) crack arg list usage:  RFeditor db [-pf pffile -ss subset_condition]
2) crack pf 
3) construct trace editor object
4) open database (use DatascopeHandle)
5) Build working view
6) if(subset) subset 
7) while(read ensemble success)
    8) load data for this ensemble
    9) call edit method
    10) save ensemble to new db (this could be tricky since we have
        to retain event associations)
11) end
